name: 部署算法博客到GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

env:
  NODE_VERSION: '18.x'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    name: 🏗️ 构建博客
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⚙️ 设置Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package.json

      - name: 📦 安装依赖
        run: |
          npm ci
          echo "依赖安装完成"

      - name: 🔍 检查项目结构
        run: |
          echo "项目结构:"
          find . -name "*.md" | head -10
          echo "配置文件:"
          ls -la docs/.vitepress/ || echo "配置文件目录不存在"

      - name: 🏗️ 构建VitePress博客
        run: |
          echo "开始构建..."
          npm run docs:build
          echo "构建完成"
          
          # 检查构建结果
          echo "构建产物:"
          ls -la docs/.vitepress/dist/ || echo "构建目录不存在"

      - name: 📊 生成构建报告
        run: |
          echo "=== 构建报告 ==="
          echo "构建时间: $(date)"
          echo "Node版本: $(node -v)"
          echo "NPM版本: $(npm -v)"
          if [ -d "docs/.vitepress/dist" ]; then
            echo "构建文件数: $(find docs/.vitepress/dist -type f | wc -l)"
            echo "总大小: $(du -sh docs/.vitepress/dist | cut -f1)"
          else
            echo "❌ 构建失败: dist目录不存在"
            exit 1
          fi

      - name: 📤 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: docs/.vitepress/dist
          retention-days: 1

      - name: 💾 缓存构建结果
        uses: actions/cache@v3
        with:
          path: |
            docs/.vitepress/dist
            node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('package.json', 'docs/**/*.md') }}
          restore-keys: |
            ${{ runner.os }}-build-

  # 部署工作
  deploy:
    name: 🚀 部署到GitHub Pages
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 📲 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          timeout: 60000

      - name: 📝 记录部署信息
        run: |
          echo "部署完成!"
          echo "页面URL: ${{ steps.deployment.outputs.page_url }}"
          echo "部署时间: $(date)"
          
      - name: 🔔 部署成功通知
        if: success()
        run: |
          echo "🎉 博客部署成功!"
          echo "🌐 访问地址: ${{ steps.deployment.outputs.page_url }}"

  # 检查工作（可选）
  check:
    name: 🔍 检查博客内容
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📋 检查Markdown文件
        run: |
          echo "检查博客文章..."
          find docs -name "*.md" -exec echo "找到文件: {}" \;
          count=$(find docs -name "*.md" | wc -l)
          echo "总共找到 $count 个Markdown文件"
          
      - name: 📏 检查文件大小
        run: |
          if [ -d "docs/.vitepress/dist" ]; then
            echo "构建文件大小分布:"
            find docs/.vitepress/dist -type f -exec du -h {} + | sort -hr | head -10
          fi